#readlog.py
#reads log files generated by sphinx_fe,adds delta,double delta feats and saves as numpy array
#requires:
#control file
#number of filters (as in feat.params)
import struct
import numpy as np
import argparse
import os

# parser = argparse.ArgumentParser()
# parser.add_argument('-ctl', dest="ctl",required=True)
# parser.add_argument('-nfil', dest="nfil",type=int,required=True)
# parser.add_argument('-di', dest="di",required=True)
# arguments = parser.parse_args()
# ctl_file = arguments.ctl
# num_filters=arguments.nfil
# di =arguments.di

def readMFC(fname,nFeats):
	#will return feat vector with data+delta and Acc 
	data = []
	with open(fname,'rb') as f:
		v = f.read(4)
		head = struct.unpack('I',v)[0]
		v = f.read(nFeats * 4)
		while v:
			frame = list(struct.unpack('%sf' % nFeats, v))
			data .append(frame)
			v = f.read(nFeats * 4)
	data = np.array(data)
	#print data.shape, head
	assert(data.shape[0] * data.shape[1] == head)
	data
	delta=add_deltas(data)
	acc=add_deltas(delta)
	data=fuse(data,delta,acc)
	return data

def add_deltas(array):
    #check dimensions per frame
    dim = array.shape[1]
    num_frames = array.shape[0]
    #print "dim",dim
    #print "num_frames",num_frames
    delta=[]
    delta_rows=[]
    for i in range (num_frames):
        for j in range(dim):
            t1 = j-1
            t2 = j+1
            if t1 < 0:
                t1 = 0
            if t2 > dim-1:
                t2 = dim-1
        
            delta_tmp = array[i,t2]-array[i,t1]
            delta_rows.append(delta_tmp)
        delta.append(delta_rows)
        delta_rows= []
    delta = np.array(delta)
    return delta

#function to fuse delta and Acc into dataset
def fuse(dataset,delta_array,acc_array):
    new_dataset = []
    dim = dataset.shape[1]
    num_frames = dataset.shape[0]
    for i in range(num_frames):
        a = dataset[i]
        b = delta_array[i]
        c = acc_array[i]
        abc = np.concatenate((a,b,c),axis=0)
        new_dataset.append(abc)
    return np.array(new_dataset)

# #variables
# #ctl_file = "/media/t-rex/F/sphinx/wsj0_dev.fileids"
# framepointer=[]
# data=[]
# #num_filters=25

# #counter for framepointer
# i=0
# lastframe=0
# print "Reading log files into Numpy arrays.."
# with open(ctl_file,"r") as f:
# 	lines = f.readlines()
# 	uttr_num=1
# 	for line in lines:
# 		print uttr_num,"/",len(lines)
# 		line=line.strip()
# 		line = di+"/"+line
# 		#print "line",line
# 		feats = readMFC(line,num_filters)
# 		#print "feats.shape",feats.shape
# 		if not i:
# 			data=feats
# 			i=1
# 		else:
# 			data=np.append(data,feats,axis=0)
# 		#print "data shape",data.shape
# 		#print "feats shape",feats.shape
# 		#print "Num of frame in uttr",uttr_num,"is",len(feats)
# 		framepointer.append(lastframe+len(feats))
# 		#print "appeneded",lastframe,"+",len(feats),lastframe+len(feats),"to framepointer"
# 		#print "framepointer:",framepointer
# 		lastframe=framepointer[-1]
# 		uttr_num+=1
# 		#print "framepointer",framepointer

# np.save("features",data)
# np.save("frame_pointer",framepointer)

# print "Feature conversion complete!"





